#!/usr/bin/env bash
set -euo pipefail

# Normalize changed Markdown files, align titles, then sync README index

repo_root="$(git rev-parse --show-toplevel)"
cd "$repo_root"

# Enforce UTF-8 to reduce mojibake on Windows
export PYTHONUTF8=1
export PYTHONIOENCODING=UTF-8

# Prefer project venv Python, then system python3/python
if [ -x "$repo_root/.venv/Scripts/python.exe" ]; then
  PY="$repo_root/.venv/Scripts/python.exe"
elif [ -x "$repo_root/.venv/bin/python3" ]; then
  PY="$repo_root/.venv/bin/python3"
elif [ -x "$repo_root/.venv/bin/python" ]; then
  PY="$repo_root/.venv/bin/python"
elif command -v python3 >/dev/null 2>&1; then
  PY=python3
elif command -v python >/dev/null 2>&1; then
  PY=python
else
  echo "[pre-commit] ERROR: python interpreter not found" >&2
  exit 1
fi

# Exclude historical archive from auto-maintenance
changed_md=( $(git diff --cached --name-only --diff-filter=ACMRTUXB \
  | grep -E '\.md$' \
  | grep -v -E '^engineering_docs_archive/' || true) )

if [ ${#changed_md[@]} -gt 0 ]; then
  echo "[pre-commit] Normalize Markdown: ${changed_md[*]}"
  "$PY" scripts/md_normalize.py "${changed_md[@]}" || true
  echo "[pre-commit] Ensure docs title matches filename"
  "$PY" scripts/ensure_title_equals_filename.py "${changed_md[@]}" || true
fi

echo "[pre-commit] Sync README docs summary index"
"$PY" scripts/update_readme_index.py || true

# 清理临时文件，避免被提交
rm -f out_prev_readme.txt 2>/dev/null || true
rm -f out_block.txt 2>/dev/null || true
rm -f last_gen_msg.txt 2>/dev/null || true
rm -f TMP_COMMIT_MSG.txt 2>/dev/null || true
rm -f out_align_docs_prev.txt 2>/dev/null || true

# 将可能被脚本改动的文件重新加入暂存区
git add README.md || true
if [ ${#changed_md[@]} -gt 0 ]; then
  git add "${changed_md[@]}" || true
fi

exit 0
